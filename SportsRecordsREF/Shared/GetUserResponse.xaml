<Activity mc:Ignorable="sap sap2010" x:Class="GetUserResponse" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_Email" Type="OutArgument(x:String)" />
    <x:Property Name="out_SpecificTeam" Type="OutArgument(x:String)" />
    <x:Property Name="out_SpecificCoach" Type="OutArgument(x:String)" />
    <x:Property Name="out_SortBy" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>781.333333333333,811.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetUserResponse_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetUserResponse" sap:VirtualizedContainerService.HintSize="418,706.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="response" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ufa:FormActivity Dismissed="{x:Null}" FormFieldsInputData="{x:Null}" FormTitle="{x:Null}" SelectedButton="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" DisableMaximizeButton="False" DisableMinimizeButton="False" DisplayName="Form Gets user input" FormFieldsOutputData="[response]" FormHeight="517" FormSchema="%[{&quot;label&quot;:&quot;What email would you like the data sent to?&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;out_Email&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;What league(s) would you like data for?&quot;,&quot;inline&quot;:true,&quot;tableView&quot;:false,&quot;defaultValue&quot;:{&quot;ncaafCfb&quot;:false,&quot;nhl&quot;:false,&quot;nfl&quot;:false,&quot;ncaa&quot;:false},&quot;values&quot;:[{&quot;label&quot;:&quot;NCAAF/CFB&quot;,&quot;value&quot;:&quot;ncaafCfb&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;NHL&quot;,&quot;value&quot;:&quot;nhl&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;NFL&quot;,&quot;value&quot;:&quot;nfl&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;NCAA Men's basketball&quot;,&quot;value&quot;:&quot;ncaa&quot;,&quot;shortcut&quot;:&quot;&quot;}],&quot;key&quot;:&quot;out_Leagues&quot;,&quot;type&quot;:&quot;selectboxes&quot;,&quot;input&quot;:true,&quot;inputType&quot;:&quot;checkbox&quot;},{&quot;label&quot;:&quot;Which Excel sheet(s) would you like to see?&quot;,&quot;inline&quot;:true,&quot;tableView&quot;:false,&quot;defaultValue&quot;:{&quot;&quot;:false,&quot;league&quot;:false,&quot;team&quot;:false,&quot;coach&quot;:false,&quot;leaguePage&quot;:false},&quot;values&quot;:[{&quot;label&quot;:&quot;League Page&quot;,&quot;value&quot;:&quot;league&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Team Page&quot;,&quot;value&quot;:&quot;team&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Coach Page&quot;,&quot;value&quot;:&quot;coach&quot;,&quot;shortcut&quot;:&quot;&quot;}],&quot;validate&quot;:{&quot;onlyAvailableItems&quot;:false},&quot;key&quot;:&quot;out_Sheets&quot;,&quot;type&quot;:&quot;selectboxes&quot;,&quot;input&quot;:true,&quot;inputType&quot;:&quot;checkbox&quot;},{&quot;label&quot;:&quot;What team would you like data for?&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;out_SpecificTeam&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true,&quot;hideOnChildrenHidden&quot;:false},{&quot;label&quot;:&quot;What coach would you like to see data for?&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;out_SpecificCoach&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true,&quot;hideOnChildrenHidden&quot;:false},{&quot;label&quot;:&quot;How would you like this/these sheet sorted&quot;,&quot;optionsLabelPosition&quot;:&quot;right&quot;,&quot;inline&quot;:true,&quot;tableView&quot;:false,&quot;values&quot;:[{&quot;label&quot;:&quot;Wins per Year&quot;,&quot;value&quot;:&quot;winsPerYear&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Wins per Games&quot;,&quot;value&quot;:&quot;winsPerGames&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Postseason Wins per Year&quot;,&quot;value&quot;:&quot;postseasonWinsPerYear&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Postseason Wins per Postseason Games&quot;,&quot;value&quot;:&quot;postSeasonWinsPerPostseasonGames&quot;,&quot;shortcut&quot;:&quot;&quot;},{&quot;label&quot;:&quot;National Championships&quot;,&quot;value&quot;:&quot;nationalChampionships&quot;,&quot;shortcut&quot;:&quot;&quot;}],&quot;key&quot;:&quot;out_SortBy&quot;,&quot;type&quot;:&quot;radio&quot;,&quot;input&quot;:true},{&quot;type&quot;:&quot;button&quot;,&quot;label&quot;:&quot;Submit&quot;,&quot;key&quot;:&quot;submit&quot;,&quot;disableOnInvalid&quot;:true,&quot;input&quot;:true,&quot;alwaysEnabled&quot;:true,&quot;tableView&quot;:true}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;1607613962475&quot;,&quot;Name&quot;:&quot;TAMU maroon&quot;,&quot;BaseCss&quot;:&quot;../../assets/css/themes/superhero.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;../../assets/themeicons/superhero.png&quot;,&quot;OverrideCssUrl&quot;:&quot;&quot;,&quot;UserStyleOverrides&quot;:&quot;body , h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {\n                      font-family : Georgia !important;\n                    }table, .btn, .form-control {\n                      font-size : 15px !important;\n                     }h1 {\n                      font-size : 37px !important;\n                    }h2 {\n                      font-size : 31px !important;\n                    }h3 {\n                      font-size : 25px !important;\n                    }h4 {\n                      font-size : 19px !important;\n                    }h5 {\n                      font-size : 15px !important;\n                    }h6 {\n                      font-size : 13px !important;\n                    }body {\n      background:  #500000 !important;\n      font-size : 15px !important;\n      font-family : Georgia !important;\n      color : #ebebeb !important\n    } .panel-default {\n                        background:   !important;\n                        border-color :   !important;\n                      }\n                 .panel-default &gt; .panel-heading {\n                        background-color:  !important;\n                        color : #ebebeb !important\n                      }.btn-primary {\n                          background:  #ffffff !important;\n                          border-color:  #fbfbfb !important;\n                          color:  #500000 !important;\n                      } .btn-primary:hover {\n                          background:  #ffffff !important;\n                          color:  #500000 !important;\n                      } .btn-default {\n                        background:   !important;\n                        border-color:   !important;\n                        color:   !important;\n                      } .btn-default:hover {\n                        background:   !important;\n                        color:   !important;\n                      } &quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:true,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormWidth="584" GenerateInputFields="True" sap:VirtualizedContainerService.HintSize="376,142.666666666667" sap2010:WorkflowViewState.IdRef="FormActivity_1" IsReadOnly="False" MaxColumnsForSchemaGeneration="6" RunDoBlockFirst="False" RunInIsolatedMode="False">
      <ufa:FormActivity.Body>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
      </ufa:FormActivity.Body>
      <ufa:FormActivity.DelayBody>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_1" />
        </ActivityAction>
      </ufa:FormActivity.DelayBody>
      <ufa:FormActivity.FormFieldsCollection>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Email">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_Email" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_SpecificTeam">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_SpecificTeam" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_SpecificCoach">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_SpecificCoach" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_SortBy">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_SortBy" />
        </OutArgument>
      </ufa:FormActivity.FormFieldsCollection>
    </ufa:FormActivity>
    <Sequence DisplayName="Retrieving values from form response" sap:VirtualizedContainerService.HintSize="376,432" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <Sequence.Variables>
        <Variable x:TypeArguments="njl:JObject" Name="responseObject" />
        <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="pickedLeague" />
        <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="pickedSheet" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[responseObject]" JsonString="[response]" />
      <Parallel DisplayName="Parallel grabbing values and adding to lists" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="Parallel_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ParallelForEach x:TypeArguments="njl:JToken" DisplayName="Grabbing sheet responses" sap:VirtualizedContainerService.HintSize="576.666666666667,713.333333333333" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1" Values="[responseObject(&quot;out_Sheets&quot;)]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="njl:JToken">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="526,560.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="checkTrue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern=": true$" DisplayName="Checks for yes response" sap:VirtualizedContainerService.HintSize="484,58.6666666666667" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[item.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;: true&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;END&quot;,&quot;OperationName&quot;:&quot;Ends with&quot;,&quot;OperationValue&quot;:&quot;$&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern=": true$" RegexOption="IgnoreCase" Result="[checkTrue]" />
              <If Condition="[checkTrue]" DisplayName="if response is yes" sap:VirtualizedContainerService.HintSize="484,370" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Assining value for sheet" sap:VirtualizedContainerService.HintSize="304,216" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="checkSheet" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="assigns sheet and replaces portions" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[checkSheet]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.ToString.Replace("""","").replace(":","").split(" "c)(0)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <AddToCollection x:TypeArguments="x:String" Collection="[pickedSheet]" DisplayName="Add To pickedSheet list" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[checkSheet]" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ParallelForEach>
        <ParallelForEach x:TypeArguments="njl:JToken" DisplayName="Grabbing league responses" sap:VirtualizedContainerService.HintSize="576.666666666667,713.333333333333" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_2" Values="[responseObject(&quot;out_Leagues&quot;)]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="njl:JToken">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="526,560.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="checkTrue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern=": true$" DisplayName="Checks for yes response" sap:VirtualizedContainerService.HintSize="484,58.6666666666667" sap2010:WorkflowViewState.IdRef="IsMatch_2" Input="[item.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;: true&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;END&quot;,&quot;OperationName&quot;:&quot;Ends with&quot;,&quot;OperationValue&quot;:&quot;$&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern=": true$" RegexOption="IgnoreCase" Result="[checkTrue]" />
              <If Condition="[checkTrue]" DisplayName="if response is yes" sap:VirtualizedContainerService.HintSize="484,370" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Assining value for league" sap:VirtualizedContainerService.HintSize="304,216" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="checkLeague" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="assigns league and replaces portions" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[checkLeague]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.ToString.Replace("""","").replace(":","").split(" "c)(0)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <AddToCollection x:TypeArguments="x:String" Collection="[pickedLeague]" DisplayName="Add To pickedLeague list" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[checkLeague]" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ParallelForEach>
      </Parallel>
      <If Condition="[pickedLeague.Count&lt;0 and pickedSheet.Count&lt;0]" DisplayName="If only sheet or league input" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Only 1 picked" sap:VirtualizedContainerService.HintSize="376,248.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message incorrect inputs" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Incorrect inputs&quot;]" />
            <Throw DisplayName="Throw must put in both types" Exception="[new UiPath.Core.BusinessRuleException(&quot;must input both a sheet and a league&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </Sequence>
        </If.Then>
        <If.Else>
          <If Condition="[pickedLeague.Count&lt;0 or pickedSheet.Count&lt;0]" DisplayName="If both league and sheet weren't input" sap:VirtualizedContainerService.HintSize="756,402.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,248.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Incorrect inputs&quot;]" />
                <Throw DisplayName="Throw must put in both types" Exception="[new UiPath.Core.BusinessRuleException(&quot;must input both a sheet and a league&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log Message incorrect inputs" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Correct inputs&quot;]" />
            </If.Else>
          </If>
        </If.Else>
      </If>
      <ParallelForEach x:TypeArguments="x:String" DisplayName="Parallel For Each league picked" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_4" Values="[pickedLeague]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="league" />
          </ActivityAction.Argument>
          <ParallelForEach x:TypeArguments="x:String" DisplayName="Parallel For Each sheet user picked" sap:VirtualizedContainerService.HintSize="304.666666666667,266.666666666667" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3" Values="[pickedSheet]">
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
              </ActivityAction.Argument>
              <Sequence DisplayName="For each league sheet pair" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" ContinueOnError="True" DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="SportsRecords">
                  <ui:AddQueueItem.ItemInformation>
                    <InArgument x:TypeArguments="x:String" x:Key="Email">[out_Email]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Specific Team">[out_SpecificTeam]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Specific Coach">[out_SpecificCoach]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Sheet">[sheet]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="League">[league]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Sorting Method">[out_SortBy]</InArgument>
                  </ui:AddQueueItem.ItemInformation>
                </ui:AddQueueItem>
              </Sequence>
            </ActivityAction>
          </ParallelForEach>
        </ActivityAction>
      </ParallelForEach>
    </Sequence>
  </Sequence>
</Activity>